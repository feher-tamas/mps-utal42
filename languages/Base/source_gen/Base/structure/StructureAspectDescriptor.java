package Base.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBooleanType = createDescriptorForBooleanType();
  /*package*/ final ConceptDescriptor myConceptDateRangeType = createDescriptorForDateRangeType();
  /*package*/ final ConceptDescriptor myConceptDateType = createDescriptorForDateType();
  /*package*/ final ConceptDescriptor myConceptFunctionArgumentDef = createDescriptorForFunctionArgumentDef();
  /*package*/ final ConceptDescriptor myConceptFunctionDef = createDescriptorForFunctionDef();
  /*package*/ final ConceptDescriptor myConceptGroupFunctionDef = createDescriptorForGroupFunctionDef();
  /*package*/ final ConceptDescriptor myConceptGroupFunctionLibrary = createDescriptorForGroupFunctionLibrary();
  /*package*/ final ConceptDescriptor myConceptIDListType = createDescriptorForIDListType();
  /*package*/ final ConceptDescriptor myConceptINumericLiteral = createDescriptorForINumericLiteral();
  /*package*/ final ConceptDescriptor myConceptIStringLiteral = createDescriptorForIStringLiteral();
  /*package*/ final ConceptDescriptor myConceptLibrary = createDescriptorForLibrary();
  /*package*/ final ConceptDescriptor myConceptMappingDataType = createDescriptorForMappingDataType();
  /*package*/ final ConceptDescriptor myConceptNumberType = createDescriptorForNumberType();
  /*package*/ final ConceptDescriptor myConceptStringType = createDescriptorForStringType();
  /*package*/ final ConceptDescriptor myConceptSzamfIdoszakType = createDescriptorForSzamfIdoszakType();
  /*package*/ final ConceptDescriptor myConceptSzotarDef = createDescriptorForSzotarDef();
  /*package*/ final ConceptDescriptor myConceptSzotarElemListType = createDescriptorForSzotarElemListType();
  /*package*/ final ConceptDescriptor myConceptSzotarElemType = createDescriptorForSzotarElemType();
  /*package*/ final ConceptDescriptor myConceptSzotarListaDef = createDescriptorForSzotarListaDef();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBooleanType, myConceptDateRangeType, myConceptDateType, myConceptFunctionArgumentDef, myConceptFunctionDef, myConceptGroupFunctionDef, myConceptGroupFunctionLibrary, myConceptIDListType, myConceptINumericLiteral, myConceptIStringLiteral, myConceptLibrary, myConceptMappingDataType, myConceptNumberType, myConceptStringType, myConceptSzamfIdoszakType, myConceptSzotarDef, myConceptSzotarElemListType, myConceptSzotarElemType, myConceptSzotarListaDef);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.BooleanType:
        return myConceptBooleanType;
      case LanguageConceptSwitch.DateRangeType:
        return myConceptDateRangeType;
      case LanguageConceptSwitch.DateType:
        return myConceptDateType;
      case LanguageConceptSwitch.FunctionArgumentDef:
        return myConceptFunctionArgumentDef;
      case LanguageConceptSwitch.FunctionDef:
        return myConceptFunctionDef;
      case LanguageConceptSwitch.GroupFunctionDef:
        return myConceptGroupFunctionDef;
      case LanguageConceptSwitch.GroupFunctionLibrary:
        return myConceptGroupFunctionLibrary;
      case LanguageConceptSwitch.IDListType:
        return myConceptIDListType;
      case LanguageConceptSwitch.INumericLiteral:
        return myConceptINumericLiteral;
      case LanguageConceptSwitch.IStringLiteral:
        return myConceptIStringLiteral;
      case LanguageConceptSwitch.Library:
        return myConceptLibrary;
      case LanguageConceptSwitch.MappingDataType:
        return myConceptMappingDataType;
      case LanguageConceptSwitch.NumberType:
        return myConceptNumberType;
      case LanguageConceptSwitch.StringType:
        return myConceptStringType;
      case LanguageConceptSwitch.SzamfIdoszakType:
        return myConceptSzamfIdoszakType;
      case LanguageConceptSwitch.SzotarDef:
        return myConceptSzotarDef;
      case LanguageConceptSwitch.SzotarElemListType:
        return myConceptSzotarElemListType;
      case LanguageConceptSwitch.SzotarElemType:
        return myConceptSzotarElemType;
      case LanguageConceptSwitch.SzotarListaDef:
        return myConceptSzotarListaDef;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBooleanType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "BooleanType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e79L);
    b.class_(false, false, false);
    // extends: Base.structure.MappingDataType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4432156404050046585");
    b.version(3);
    b.alias("logikai");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDateRangeType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "DateRangeType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd0194678c6efL);
    b.class_(false, false, false);
    // extends: Base.structure.MappingDataType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4260352579490858735");
    b.version(3);
    b.alias("dátum intervallum");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDateType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "DateType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e78L);
    b.class_(false, false, false);
    // extends: Base.structure.MappingDataType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4432156404050046584");
    b.version(3);
    b.alias("dátum");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionArgumentDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "FunctionArgumentDef", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x48a870062c6b9a95L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/5235557738635565717");
    b.version(3);
    b.property("description", 0x48a870062c6bdaa2L).type(PrimitiveTypeId.STRING).origin("5235557738635582114").done();
    b.aggregate("type", 0xe2139a08bde24c6L).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L).optional(false).ordered(true).multiple(false).origin("1018158352466584774").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "FunctionDef", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x48a870062c6a84ebL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/5235557738635494635");
    b.version(3);
    b.property("description", 0x48a870062c6bd260L).type(PrimitiveTypeId.STRING).origin("5235557738635580000").done();
    b.property("engineName", 0xd79bf50eec03443L).type(PrimitiveTypeId.STRING).origin("971017548998915139").done();
    b.property("anyArguments", 0x48a870062c6ea984L).type(PrimitiveTypeId.BOOLEAN).origin("5235557738635766148").done();
    b.aggregate("arguments", 0x48a870062c6bd554L).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x48a870062c6b9a95L).optional(true).ordered(true).multiple(true).origin("5235557738635580756").done();
    b.aggregate("type", 0x4c7bf994500ed7ebL).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L).optional(false).ordered(true).multiple(false).origin("5511272984411559915").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGroupFunctionDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "GroupFunctionDef", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x666f7cfffc4ea1c6L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/7381255753175048646");
    b.version(3);
    b.property("description", 0x666f7cfffc4ee553L).type(PrimitiveTypeId.STRING).origin("7381255753175065939").done();
    b.property("engineName", 0x666f7cfffc4ee554L).type(PrimitiveTypeId.STRING).origin("7381255753175065940").done();
    b.aggregate("type", 0x63a3762620a804b5L).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L).optional(false).ordered(true).multiple(false).origin("7179712137087419573").done();
    b.aggregate("argumentType", 0x63a3762620a804b7L).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L).optional(false).ordered(true).multiple(false).origin("7179712137087419575").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGroupFunctionLibrary() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "GroupFunctionLibrary", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x666f7cfffc5ec891L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/7381255753176107153");
    b.version(3);
    b.property("description", 0x666f7cfffc5ec894L).type(PrimitiveTypeId.STRING).origin("7381255753176107156").done();
    b.aggregate("functions", 0x666f7cfffc5ec896L).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x666f7cfffc4ea1c6L).optional(true).ordered(true).multiple(true).origin("7381255753176107158").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDListType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "IDListType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd0194678f130L);
    b.class_(false, false, false);
    // extends: Base.structure.MappingDataType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4260352579490869552");
    b.version(3);
    b.alias("ID lista");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForINumericLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "INumericLiteral", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x1ea13a5a13bdd0bbL);
    b.interface_();
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/2207109450940928187");
    b.version(3);
    b.property("value", 0x1ea13a5a13bdd130L).type(PrimitiveTypeId.INTEGER).origin("2207109450940928304").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStringLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "IStringLiteral", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x484d35ba3aa88ce0L);
    b.interface_();
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/5209879417901845728");
    b.version(3);
    b.property("value", 0x9878a16eb85662dL).type(PrimitiveTypeId.STRING).origin("686669299242591789").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLibrary() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "Library", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x48a870062c6bdce2L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/5235557738635582690");
    b.version(3);
    b.property("description", 0x48a870062c6be191L).type(PrimitiveTypeId.STRING).origin("5235557738635583889").done();
    b.aggregate("functions", 0x48a870062c6be46bL).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x48a870062c6a84ebL).optional(true).ordered(true).multiple(true).origin("5235557738635584619").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMappingDataType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "MappingDataType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.class_(false, true, false);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4432156404050162049");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumberType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "NumberType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e77L);
    b.class_(false, false, false);
    // extends: Base.structure.MappingDataType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4432156404050046583");
    b.version(3);
    b.alias("szám");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "StringType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e74L);
    b.class_(false, false, false);
    // extends: Base.structure.MappingDataType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4432156404050046580");
    b.version(3);
    b.alias("szöveg");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSzamfIdoszakType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "SzamfIdoszakType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd0194678be36L);
    b.class_(false, false, false);
    // extends: Base.structure.MappingDataType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec45461f181L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4260352579490856502");
    b.version(3);
    b.alias("számf. időszak");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSzotarDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "SzotarDef", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd0194678e770L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4260352579490867056");
    b.version(3);
    b.property("description", 0x3b1fd019467a3146L).type(PrimitiveTypeId.STRING).origin("4260352579490951494").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSzotarElemListType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "SzotarElemListType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd0194678e76fL);
    b.class_(false, false, false);
    // extends: Base.structure.IDListType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd0194678f130L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4260352579490867055");
    b.version(3);
    b.alias("Szótár elem lista");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSzotarElemType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "SzotarElemType", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e7aL);
    b.class_(false, false, false);
    // extends: Base.structure.NumberType
    b.super_(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e77L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4432156404050046586");
    b.version(3);
    b.alias("szótár elem");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSzotarListaDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Base", "SzotarListaDef", 0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd019467a3136L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b5811f08-caa0-4ada-be0d-e2acbf62ca3a(Base.structure)/4260352579490951478");
    b.version(3);
    b.aggregate("items", 0x3b1fd019467a3137L).target(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3b1fd0194678e770L).optional(true).ordered(true).multiple(true).origin("4260352579490951479").done();
    return b.create();
  }
}
