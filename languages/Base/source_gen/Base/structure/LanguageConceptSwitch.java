package Base.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BooleanType = 0;
  public static final int DateRangeType = 1;
  public static final int DateType = 2;
  public static final int FunctionArgumentDef = 3;
  public static final int FunctionDef = 4;
  public static final int GroupFunctionDef = 5;
  public static final int GroupFunctionLibrary = 6;
  public static final int IDListType = 7;
  public static final int INumericLiteral = 8;
  public static final int IStringLiteral = 9;
  public static final int Library = 10;
  public static final int MappingDataType = 11;
  public static final int NumberType = 12;
  public static final int StringType = 13;
  public static final int SzamfIdoszakType = 14;
  public static final int SzotarDef = 15;
  public static final int SzotarElemListType = 16;
  public static final int SzotarElemType = 17;
  public static final int SzotarListaDef = 18;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x29b980d162104d27L, 0x916e07bc0552ea93L);
    builder.put(0x3d822ec454602e79L, BooleanType);
    builder.put(0x3b1fd0194678c6efL, DateRangeType);
    builder.put(0x3d822ec454602e78L, DateType);
    builder.put(0x48a870062c6b9a95L, FunctionArgumentDef);
    builder.put(0x48a870062c6a84ebL, FunctionDef);
    builder.put(0x666f7cfffc4ea1c6L, GroupFunctionDef);
    builder.put(0x666f7cfffc5ec891L, GroupFunctionLibrary);
    builder.put(0x3b1fd0194678f130L, IDListType);
    builder.put(0x1ea13a5a13bdd0bbL, INumericLiteral);
    builder.put(0x484d35ba3aa88ce0L, IStringLiteral);
    builder.put(0x48a870062c6bdce2L, Library);
    builder.put(0x3d822ec45461f181L, MappingDataType);
    builder.put(0x3d822ec454602e77L, NumberType);
    builder.put(0x3d822ec454602e74L, StringType);
    builder.put(0x3b1fd0194678be36L, SzamfIdoszakType);
    builder.put(0x3b1fd0194678e770L, SzotarDef);
    builder.put(0x3b1fd0194678e76fL, SzotarElemListType);
    builder.put(0x3d822ec454602e7aL, SzotarElemType);
    builder.put(0x3b1fd019467a3136L, SzotarListaDef);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
