package Base.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_IStringLiteral_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_IStringLiteral_InferenceRule() {
  }
  public void applyRule(final SNode stringLiteral, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      SNode _nodeToCheck_1029348928467 = stringLiteral;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:76c6972a-64e3-40d5-8957-3606fbda194a(Base.typesystem)", "2207109450940457636", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:76c6972a-64e3-40d5-8957-3606fbda194a(Base.typesystem)", "2207109450940455938", true), (SNode) createStringType_bbvxv0_a0a0b(), _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.IStringLiteral$ov;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createStringType_bbvxv0_a0a0b() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.StringType$nm);
    return n0.getResult();
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IStringLiteral$ov = MetaAdapterFactory.getInterfaceConcept(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x484d35ba3aa88ce0L, "Base.structure.IStringLiteral");
    /*package*/ static final SConcept StringType$nm = MetaAdapterFactory.getConcept(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e74L, "Base.structure.StringType");
  }
}
