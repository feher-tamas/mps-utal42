package DataMapping.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public class typeof_ParamRef_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_ParamRef_InferenceRule() {
  }
  public void applyRule(final SNode paramRef, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      SNode _nodeToCheck_1029348928467 = paramRef;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186766328", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186764877", true), (SNode) typeCheckingContext.typeOf(SLinkOperations.getTarget(paramRef, LINKS.param$43xU), "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186769526", true), _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.IParamRef$yT;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink param$43xU = MetaAdapterFactory.getReferenceLink(0x22a6c585e3ba46bcL, 0x922caa7eb0f6869bL, 0x1c06662da7304013L, 0x1c06662da7304016L, "param");
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IParamRef$yT = MetaAdapterFactory.getInterfaceConcept(0x22a6c585e3ba46bcL, 0x922caa7eb0f6869bL, 0x1c06662da7304013L, "DataMapping.structure.IParamRef");
  }
}
