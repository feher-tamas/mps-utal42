package DataMapping.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_DateRangeCondition_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_DateRangeCondition_InferenceRule() {
  }
  public void applyRule(final SNode dateRangeCondition, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(dateRangeCondition, LINKS.Datum$X1Ww);
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186274956", 0, null);
      typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186274962", true), (SNode) createDateType_yr452g_a0a0b(), false, true, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(dateRangeCondition, LINKS.IgDatum$X1ft);
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186276547", 0, null);
      typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186276549", true), (SNode) createDateType_yr452g_a0b0b(), false, true, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(dateRangeCondition, LINKS.TolDatum$X0Lr);
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186276934", 0, null);
      typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:2ccfac22-e537-4cc8-903d-e30f04953635(DataMapping.typesystem)", "2019413829186276936", true), (SNode) createDateType_yr452g_a0c0b(), false, true, _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.SourceDateRangeCondition$sU;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createDateType_yr452g_a0a0b() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.DateType$pi);
    return n0.getResult();
  }
  private static SNode createDateType_yr452g_a0b0b() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.DateType$pi);
    return n0.getResult();
  }
  private static SNode createDateType_yr452g_a0c0b() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.DateType$pi);
    return n0.getResult();
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink Datum$X1Ww = MetaAdapterFactory.getContainmentLink(0x22a6c585e3ba46bcL, 0x922caa7eb0f6869bL, 0x1c06662da7261881L, 0x1c06662da726188aL, "Datum");
    /*package*/ static final SContainmentLink IgDatum$X1ft = MetaAdapterFactory.getContainmentLink(0x22a6c585e3ba46bcL, 0x922caa7eb0f6869bL, 0x1c06662da7261881L, 0x1c06662da7261887L, "IgDatum");
    /*package*/ static final SContainmentLink TolDatum$X0Lr = MetaAdapterFactory.getContainmentLink(0x22a6c585e3ba46bcL, 0x922caa7eb0f6869bL, 0x1c06662da7261881L, 0x1c06662da7261885L, "TolDatum");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept SourceDateRangeCondition$sU = MetaAdapterFactory.getConcept(0x22a6c585e3ba46bcL, 0x922caa7eb0f6869bL, 0x1c06662da7261881L, "DataMapping.structure.SourceDateRangeCondition");
    /*package*/ static final SConcept DateType$pi = MetaAdapterFactory.getConcept(0x29b980d162104d27L, 0x916e07bc0552ea93L, 0x3d822ec454602e78L, "Base.structure.DateType");
  }
}
